<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd" child.project.url.inherit.append.path="false">
    <modelVersion>4.0.0</modelVersion>

    <groupId>dev.logchange</groupId>
    <artifactId>logchange</artifactId>
    <version>1.19.5-SNAPSHOT</version>
    <packaging>pom</packaging>

    <modules>
        <module>logchange-utils</module>
        <module>logchange-md</module>
        <module>logchange-core</module>
        <module>logchange-commands</module>
        <module>logchange-maven-plugin</module>
        <module>logchange-gradle-plugin</module>
        <module>logchange-cli</module>
        <module>logchange-test-reports</module>
    </modules>

    <name>logchange</name>
    <description>
        Tool to manage and generate CHANGELOG.md based on YAML files,
        which are representing single entry in changelog.
    </description>
    <url>https://github.com/logchange/logchange</url>

    <licenses>
        <license>
            <name>Apache License 2.0</name>
            <url>https://github.com/logchange/logchange/blob/main/LICENSE</url>
        </license>
    </licenses>
    <developers>
        <developer>
            <id>marwin1991</id>
            <name>Piotr Zmilczak</name>
            <email>peter.zmilczak@gmail.com</email>
        </developer>
    </developers>

    <scm>
        <connection>scm:git:${project.scm.url}</connection>
        <developerConnection>scm:git:${project.scm.url}</developerConnection>
        <url>https://github.com/logchange/logchange.git</url>
        <tag>HEAD</tag>
    </scm>

    <repositories>
        <repository>
            <id>jitpack.io</id>
            <url>https://jitpack.io</url>
        </repository>
    </repositories>

    <properties>
        <maven.compiler.source>1.8</maven.compiler.source>
        <maven.compiler.target>1.8</maven.compiler.target>
        <java.version>1.8</java.version>
        <maven-compiler-plugin.version>3.14.0</maven-compiler-plugin.version>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

        <lombok.version>1.18.38</lombok.version>
        <lombok-maven.version>1.18.22.0</lombok-maven.version>
        <maven-changes.version>2.12.1</maven-changes.version>
        <jinjava.version>2.8.0</jinjava.version>

        <maven-site-plugin.version>3.21.0</maven-site-plugin.version>

        <!-- TESTS -->
        <maven-surefire-plugin.version>3.5.3</maven-surefire-plugin.version>
        <junit-jupiter.version>5.13.1</junit-jupiter.version>
        <mockito-core.version>5.18.0</mockito-core.version>
        <assertj.version>3.27.3</assertj.version>
        <pitest-maven.version>1.19.6</pitest-maven.version>
        <pitest-junit5-plugin.version>1.2.3</pitest-junit5-plugin.version>
    </properties>

    <distributionManagement>
        <snapshotRepository>
            <id>ossrh</id>
            <url>https://s01.oss.sonatype.org/content/repositories/snapshots/</url>
        </snapshotRepository>
        <repository>
            <id>ossrh</id>
            <url>https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/</url>
        </repository>
    </distributionManagement>

    <dependencies>

        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>${lombok.version}</version>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-changes-plugin</artifactId>
            <version>${maven-changes.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>*</groupId>
                    <artifactId>*</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <!-- TESTS -->
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter</artifactId>
            <version>${junit-jupiter.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.assertj</groupId>
            <artifactId>assertj-core</artifactId>
            <version>${assertj.version}</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${maven-compiler-plugin.version}</version>
                <configuration>
                    <annotationProcessorPaths>
                        <path>
                            <groupId>org.projectlombok</groupId>
                            <artifactId>lombok</artifactId>
                            <version>${lombok.version}</version>
                        </path>
                    </annotationProcessorPaths>
                    <source>${java.version}</source>
                    <target>${java.version}</target>
                </configuration>
            </plugin>
            <!--
            Cannot build project if there is circular dependency.
            But sometimes we want test this plugin so to do that build and uncomment
            then you can use snapshot version during local testing.
            -->
            <!--            <plugin>-->
            <!--                <groupId>dev.logchange</groupId>-->
            <!--                <artifactId>logchange-maven-plugin</artifactId>-->
            <!--                <version>1.1.0-SNAPSHOT</version>-->
            <!--                <inherited>false</inherited> &lt;!&ndash; For multi module project &ndash;&gt;-->
            <!--            </plugin>-->
            <plugin>
                <artifactId>maven-release-plugin</artifactId>
                <configuration>
                    <tagNameFormat>@{project.version}</tagNameFormat>
                    <scmCommentPrefix>[Releasing new version]</scmCommentPrefix>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-source-plugin</artifactId>
                <version>3.3.1</version>
                <executions>
                    <execution>
                        <id>attach-sources</id>
                        <goals>
                            <goal>jar-no-fork</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

        </plugins>
    </build>

    <profiles>
        <profile>
            <id>pitest</id>
            <build>
                <pluginManagement>
                    <plugins>
                        <plugin>
                            <groupId>org.pitest</groupId>
                            <artifactId>pitest-maven</artifactId>
                            <version>${pitest-maven.version}</version>
                            <configuration>
                                <verbose>true</verbose>
                                <threads>4</threads>
                                <failWhenNoMutations>false</failWhenNoMutations>
                                <exportLineCoverage>true</exportLineCoverage>
                                <outputFormats>
                                    <value>XML</value>
                                </outputFormats>
                                <timestampedReports>false</timestampedReports>
                            </configuration>
                            <!-- https://github.com/hcoles/pitest/issues/284 -->
                            <!-- Need this to support JUnit 5 -->
                            <dependencies>
                                <dependency>
                                    <groupId>org.pitest</groupId>
                                    <artifactId>pitest-junit5-plugin</artifactId>
                                    <version>${pitest-junit5-plugin.version}</version>
                                </dependency>
                            </dependencies>
                            <executions>
                                <execution>
                                    <id>run-mutation-tests</id>
                                    <goals>
                                        <goal>mutationCoverage</goal>
                                    </goals>
                                </execution>
                            </executions>
                        </plugin>
                    </plugins>
                </pluginManagement>
            </build>
        </profile>
        <profile>
            <id>ci-cd</id>
            <build>
                <plugins>
                    <plugin>
                        <!-- We always publish all modules, we tried to publish only some, but we need all as dependencies, parent module and last module
                        is also important, because if its not uploaded, nothing will upload because of bug :) -->
                        <!-- https://central.sonatype.org/publish/publish-maven/#nexus-staging-maven-plugin-for-deployment-and-release -->
                        <groupId>org.sonatype.plugins</groupId>
                        <artifactId>nexus-staging-maven-plugin</artifactId>
                        <version>1.7.0</version>
                        <extensions>true</extensions>
                        <configuration>
                            <serverId>ossrh</serverId>
                            <nexusUrl>https://s01.oss.sonatype.org/</nexusUrl>
                            <autoReleaseAfterClose>true</autoReleaseAfterClose>
                        </configuration>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-gpg-plugin</artifactId>
                        <version>3.2.7</version>
                        <executions>
                            <execution>
                                <id>sign-artifacts</id>
                                <phase>verify</phase>
                                <goals>
                                    <goal>sign</goal>
                                </goals>
                                <configuration>
                                    <!-- Prevent gpg from using pinentry programs. Fixes: gpg: signing
                                        failed: Inappropriate ioctl for device -->
                                    <gpgArguments>
                                        <arg>--pinentry-mode</arg>
                                        <arg>loopback</arg>
                                    </gpgArguments>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>

                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-javadoc-plugin</artifactId>
                        <version>3.11.2</version>
                        <executions>
                            <execution>
                                <id>attach-javadocs</id>
                                <goals>
                                    <goal>jar</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

</project>
